{"name":"Dotenv","tagline":"Loads environment variables from .env for nodejs projects.","body":"# dotenv\r\n\r\nDotenv loads environment variables from .env into ENV (process.env).\r\n\r\n## Installation\r\n\r\nAs early as possible in your application require dotenv and load the .env variables. \r\n\r\n```javascript\r\nvar dotenv = require('dotenv');\r\ndotenv.load();\r\n```\r\n\r\n## Usage\r\n\r\nAdd your application configuration to your .env file in the root of your project:\r\n\r\n```\r\nS3_BUCKET=YOURS3BUCKET\r\nSECRET_KEY=YOURSECRETKEYGOESHERE\r\nSENDGRID_USERNAME=YOURSENDGRIDUSERNAME\r\nSENDGRID_PASSWORD=YOURSENDGRIDPASSWORDGOESHERE\r\n```\r\n\r\nWhenever your application loads, these variables will be available in `process.env`:\r\n\r\n```javascript\r\nvar sendgrid_username = process.env.SENDGRID_USERNAME;\r\n```\r\n\r\n## Should I commit my .env file?\r\n\r\nTry not to commit your .env file to version control. It is best to keep it local to your machine and local on any machine you deploy to. Keep production credential .envs on your production machines, and keep development .envs on your local machine.\r\n\r\n## Contributing\r\n\r\nContributions are very welcome. To run the tests, run:\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## Running tests\r\n\r\n```bash\r\nnpm test\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}